apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.hearthstonetrueapp"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "environment"
    productFlavors {
        postmanWS {
            dimension "environment"
            applicationIdSuffix = ".postman"
            versionNameSuffix "-postman"
            ext {
                wsUrl = "https://6feba30d-4657-43a9-83c5-e94a57036ed1.mock.pstmn.io/"
                apiKey = ""
            }
        }

        development {
            dimension "environment"
            applicationIdSuffix = ".dev"
            versionNameSuffix '-dev'
            ext {
                wsUrl = "https://eu.api.blizzard.com/hearthstone/"
                apiKey = ""
            }
        }

        recette {
            dimension "environment"
            applicationIdSuffix = ".recette"
            versionNameSuffix '-recette'
            ext {
                wsUrl = "https://eu.api.blizzard.com/hearthstone/"
                apiKey = ""
            }
        }


        applicationVariants.all { variant ->
            def dimensions = variant.productFlavors
            def environment = dimensions[0]

            def wsUrl = environment.ext.wsUrl
            def apiKey = environment.ext.apiKey
            variant.buildConfigField "String", "WSUrl", "\"$wsUrl\""
            variant.buildConfigField "String", "API_KEY", "\"$apiKey\""
        }
    }




    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

}

ext {
    picasso= '2.71828'
    lifecycle_version = '2.2.0'
    kotlin_version = '1.4.10'
    coroutine_version = '1.3.7'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.google.code.gson:gson:2.8.5'


    //Picasso
    implementation "com.squareup.picasso:picasso:$picasso"

    //LifeCycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //database
    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    //add more
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation 'com.android.support:multidex:1.0.3'


}